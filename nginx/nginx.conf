worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Nginx DNS feloldás a dinamikus hostokhoz (pl. java-backend)
    resolver 127.0.0.11 valid=10s;

    log_format custom_log '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$upstream_addr" "$upstream_response_time"';

    # -------------------------------------------------------------
    # SERVER BLOKK CSAK BELSŐ PROXYZÁSHOZ (java-client -> nginx -> java-backend)
    # Csak azon a porton figyel, amit a java-client hív a belső hálózaton (alapértelmezett 80-as port)
    # -------------------------------------------------------------
    server {
        listen 80; # Az Nginx a belső hálózaton a 80-as porton fog figyelni

        # Itt nem kell server_name, mert belső hívásról van szó, vagy ha kell,
        # akkor lehet "localhost" vagy a konténer neve (bár ez általában nem kell)

        # Az útvonal, amit a java-client hív a backend eléréséhez
        location /backend-api/ {
            set $upstream_backend_host "java-backend";
            # NEM vágjuk le az /backend-api/ prefixet!
            # Helyette az /api/ prefixet adjuk hozzá.
            # Pl.: /backend-api/data -> http://java-backend:8082/api/data
#             proxy_pass http://$upstream_backend_host:8082/api/; # <-- Módosítás itt: /api/ a végén
            proxy_pass http://java-backend:8082/api/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            access_log /var/log/nginx/internal_backend_proxy_access.log custom_log;
            error_log /var/log/nginx/internal_backend_proxy_error.log error;
        }
        # Opcionális: Ha más belső routingra is szükség van, itt add hozzá
        # location /other-service/ { ... }
    }
}