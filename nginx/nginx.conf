#load_module modules/ndk_http_module.so;
#load_module modules/ngx_http_lua_module.so;

worker_processes 1;
env APP_LOG_INCLUDE_HEADERS;
env APP_LOG_INCLUDE_BODY;
env APP_LOG_HEADER_PARAM;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Nginx DNS feloldás a dinamikus hostokhoz (pl. java-backend)
    resolver 127.0.0.11 valid=10s;

    # A backend kiszolgálót DNS alapon keressük. A "resolver" direktíva miatt
    # az Nginx újra megkísérli a névfeloldást, így a szolgáltatás későbbi
    # indítását is kezelni tudjuk.

    # Include dynamically generated log format definition
    include /usr/local/openresty/nginx/conf/log_format.conf;

    # Allow Lua scripts to read the request body for logging
    lua_need_request_body on;

    # Disable default access and error logs
    access_log off;
    error_log /dev/null crit;

    # -------------------------------------------------------------
    # SERVER BLOKK CSAK BELSŐ PROXYZÁSHOZ (java-client -> nginx -> java-backend)
    # Csak azon a porton figyel, amit a java-client hív a belső hálózaton (alapértelmezett 80-as port)
    # -------------------------------------------------------------
    server {
        listen 80; # Az Nginx a belső hálózaton a 80-as porton fog figyelni

        # Itt nem kell server_name, mert belső hívásról van szó, vagy ha kell,
        # akkor lehet "localhost" vagy a konténer neve (bár ez általában nem kell)

        # Common headers and logging for all proxied requests
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-App-Nginx "true";
        add_header X-App-Nginx "true";
        body_filter_by_lua_file /usr/local/openresty/nginx/conf/app_logger_body.lua;
        log_by_lua_file /usr/local/openresty/nginx/conf/app_logger.lua;

        access_log /var/log/nginx/internal_backend_proxy_access.log custom_log;
        error_log /var/log/nginx/internal_backend_proxy_error.log error;

        # Route definitions are maintained in a separate file for clarity.
        # Adapted from the legacy Zuul configuration found in `My/application.yml`.
        include /usr/local/openresty/nginx/conf/routes.conf;
    }
}
